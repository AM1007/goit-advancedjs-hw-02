{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst counterInput = document.querySelector('#datetime-picker');\nconst daysCounter = document.querySelector('[data-days]');\nconst hoursCounter = document.querySelector('[data-hours]');\nconst minutesCounter = document.querySelector('[data-minutes]');\nconst secondsCounter = document.querySelector('[data-seconds]');\nconst startCounter = document.querySelector('[data-start]');\n\n// ====== adding a \"Reset\" button ======\nconst resetCounter = document.createElement('button');\nstartCounter.insertAdjacentElement('afterend', resetCounter);\nresetCounter.textContent = 'Reset';\nresetCounter.type = 'button';\nresetCounter.setAttribute('data-reset', '');\nresetCounter.setAttribute('disabled', '');\n\n// ====== adding a Headline ======\nconst backLink = counterInput.previousElementSibling;\nconst headline = document.createElement('h1');\nheadline.className = 'title';\nheadline.textContent = 'Pick an expiration date';\nbackLink.insertAdjacentElement('afterend', headline);\n\nlet currentDate = null;\nlet setDate = null;\nlet progressDate = null;\nlet timerId1 = null;\n\n// ====== adding time units conversion function ======\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// ====== adding two-digit form view function ======\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n// ====== adding countdown timer function ======\n\nconst countDown = () => {\n  currentDate = new Date();\n  let remainingTime = setDate.getTime() - currentDate.getTime();\n  if (remainingTime > 0) {\n    remainingTime = convertMs(remainingTime);\n\n    let { days, hours, minutes, seconds } = remainingTime;\n    daysCounter.textContent = addLeadingZero(days);\n    hoursCounter.textContent = addLeadingZero(hours);\n    minutesCounter.textContent = addLeadingZero(minutes);\n    secondsCounter.textContent = addLeadingZero(seconds);\n    resetCounter.disabled = false;\n  } else {\n    clearInterval(timerId1);\n    startCounter.disabled = false;\n    resetCounter.disabled = true;\n    counterInput.disabled = false;\n    iziToast.success({\n      title: 'OK',\n      message: 'Your wait has ended! Relax...',\n    });\n  }\n};\n\n// ====== adding flatpickr options ======\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    currentDate = new Date();\n    setDate = selectedDates[0];\n    if (setDate.getTime() - currentDate.getTime() > 0) {\n      startCounter.disabled = false;\n    } else {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a future date!',\n      });\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\n// ====== assigning functions to timer control buttons ======\n\nstartCounter.disabled = true;\n\nstartCounter.addEventListener('click', () => {\n  progressDate = new Date();\n  timerId1 = setInterval(countDown, 1000);\n  endDiv.style.display = 'block';\n  populateEnd();\n  timer.style.display = 'block';\n  startCounter.disabled = true;\n  counterInput.disabled = true;\n});\n\nresetCounter.addEventListener('click', () => {\n  clearInterval(timerId1);\n  startCounter.disabled = true;\n  resetCounter.disabled = true;\n  counterInput.disabled = false;\n  daysCounter.textContent = '00';\n  hoursCounter.textContent = '00';\n  minutesCounter.textContent = '00';\n  secondsCounter.textContent = '00';\n  endDiv.textContent = '';\n  endDiv.style.display = 'none';\n  timer.style.display = 'none';\n});\n\n// ====== adding \"Expiring Time\" function =====\n\nconst timer = document.body.querySelector('.timer');\ntimer.style.display = 'none';\ntimer.insertAdjacentHTML('afterend', `<div class=\"end\"></div>`);\nconst endDiv = document.querySelector('.end');\n\nfunction populateEnd() {\n  endDiv.textContent = `Expiring time: ${setDate.getDate()}.${\n    setDate.getMonth() + 1\n  }.${setDate.getFullYear()} ${setDate.getHours()}:${setDate.getMinutes()}`;\n}\n\n// ====== Styles ======\n\nstartCounter.setAttribute('id', 'startBtn');\nresetCounter.setAttribute('id', 'resetBtn');\n\ndocument.styleSheets[0].insertRule(`#startBtn:disabled{\n  display: none;\n}`);\n\ndocument.styleSheets[0].insertRule(`#resetBtn:disabled{\n  display: none;\n}`);\n"],"names":["counterInput","daysCounter","hoursCounter","minutesCounter","secondsCounter","startCounter","resetCounter","backLink","headline","currentDate","setDate","timerId1","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","countDown","remainingTime","iziToast","options","selectedDates","flatpickr","endDiv","populateEnd","timer"],"mappings":"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"}